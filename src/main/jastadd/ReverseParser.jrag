aspect ReverseParser{
  public static io.swagger.v3.oas.models.OpenAPI OpenAPIObject.reverseOpenAPI(OpenAPIObject openapi){
    io.swagger.v3.oas.models.OpenAPI api = new io.swagger.v3.oas.models.OpenAPI();
    io.swagger.v3.oas.models.Paths paths = new io.swagger.v3.oas.models.Paths();

    Optional.ofNullable(openapi.getOpenAPI())
            .filter(openapiText -> !openapiText.isEmpty())
            .ifPresent(api::setOpenapi);
    Optional.ofNullable(openapi.getInfo())
            .ifPresent(info -> api.setInfo(InfoObject.reverseInfo(info)));
    Optional.ofNullable(openapi.getComponents())
            .ifPresent(components -> api.setComponents(ComponentsObject.reverseComponents(components)));
    Optional.ofNullable(openapi.getExternalDocs())
            .ifPresent(externalDocs -> api.setExternalDocs(ExternalDocObject.reverseExternalDocs(externalDocs)));
    Optional.ofNullable(openapi.getPaths())
            .ifPresent(pathsObject -> {
              pathsObject.getPathsList().forEach(tuple -> paths.addPathItem(tuple.getKey(), tuple.getPathItem().reversePath(tuple.getPathItem())));
              pathsObject.getExtensionsList().forEach(extension -> paths.addExtension(extension.getKey(), extension.getValue()));
            });
    api.setPaths(paths);

    if (openapi.getNumServers() != 0) {
      for (ServerObject serverObject : openapi.getServersList())
        api.addServersItem(ServerObject.reverseServer(serverObject));
    }
    if (openapi.getNumSecurityRequirements() != 0) {
      for (SecurityRequirementObject securityRequirement : openapi.getSecurityRequirementsList())
        api.addSecurityItem(SecurityRequirementObject.reverseSecurityRequirement(securityRequirement));
    }
    if (openapi.getNumTags() != 0) {
      for (TagObject tag : openapi.getTagsList()) api.addTagsItem(TagObject.reverseTag(tag));
    }
    if (openapi.getNumExtensions() != 0) {
      for (Extension extension : openapi.getExtensionsList())
        api.addExtension(extension.getKey(), extension.getValue());
    }

    return api;
  }

    public static io.swagger.v3.oas.models.info.Info InfoObject.reverseInfo(InfoObject infoObject){
      io.swagger.v3.oas.models.info.Info info = new io.swagger.v3.oas.models.info.Info();

      Optional.ofNullable(infoObject.getTitle())
              .filter(title -> !title.isEmpty())
              .ifPresent(info::setTitle);
      Optional.ofNullable(infoObject.getVersion())
              .filter(version -> !version.isEmpty())
              .ifPresent(info::setVersion);
      Optional.ofNullable(infoObject.getDescription())
              .filter(description -> !description.isEmpty())
              .ifPresent(info::setDescription);
      Optional.ofNullable(infoObject.getTermsOfService())
              .filter(termsOfService -> !termsOfService.isEmpty())
              .ifPresent(info::setTermsOfService);
      Optional.ofNullable(infoObject.getContact())
              .ifPresent(contact -> info.setContact(ContactObject.reverseContact(contact)));
      Optional.ofNullable(infoObject.getLicense())
              .ifPresent(license -> info.setLicense(LicenseObject.reverseLicense(license)));
      if (infoObject.getNumExtensions() != 0) {
        for (Extension extension : infoObject.getExtensionsList())
          info.addExtension(extension.getKey(), extension.getValue());
      }

      return info;
    }

    public static io.swagger.v3.oas.models.info.Contact ContactObject.reverseContact(ContactObject contactObject){
      io.swagger.v3.oas.models.info.Contact contact = new io.swagger.v3.oas.models.info.Contact();

      Optional.ofNullable(contactObject.getName())
          .filter(name -> !name.isEmpty())
          .ifPresent(contact::setName);
      Optional.ofNullable(contactObject.getUrl())
          .filter(url -> !url.isEmpty())
          .ifPresent(contact::setUrl);
      Optional.ofNullable(contactObject.getEmail())
          .filter(email -> !email.isEmpty())
          .ifPresent(contact::setEmail);
      if (contactObject.getNumExtensions() != 0) {
        for (Extension extension : contactObject.getExtensionsList())
          contact.addExtension(extension.getKey(), extension.getValue());
      }

      return contact;
    }

    public static io.swagger.v3.oas.models.info.License LicenseObject.reverseLicense(LicenseObject licenseObject){
      io.swagger.v3.oas.models.info.License license = new io.swagger.v3.oas.models.info.License();

      Optional.ofNullable(licenseObject.getName())
          .filter(name -> !name.isEmpty())
          .ifPresent(license::setName);
      Optional.ofNullable(licenseObject.getUrl())
          .filter(url -> !url.isEmpty())
          .ifPresent(license::setUrl);
      if (licenseObject.getNumExtensions() != 0) {
        for (Extension extension : licenseObject.getExtensionsList())
          license.addExtension(extension.getKey(), extension.getValue());
      }

      return license;
    }

    public static io.swagger.v3.oas.models.servers.Server ServerObject.reverseServer(ServerObject serverObject){
      io.swagger.v3.oas.models.servers.Server server = new io.swagger.v3.oas.models.servers.Server();

      Optional.ofNullable(serverObject.getUrl())
          .filter(url -> !url.isEmpty())
          .ifPresent(server::setUrl);
      Optional.ofNullable(serverObject.getDescription())
          .filter(description -> !description.isEmpty())
          .ifPresent(server::setDescription);
      if (serverObject.getNumServerVariables() != 0) {
        io.swagger.v3.oas.models.servers.ServerVariables serverVariables = new io.swagger.v3.oas.models.servers.ServerVariables();
        for (ServerVariablesTuple tuple : serverObject.getServerVariablesList())
          serverVariables.addServerVariable(tuple.getName(), ServerVariableObject.reverseServerVariable(tuple.getVariable()));
        server.setVariables(serverVariables);
      }
      if (serverObject.getNumExtensions() != 0) {
        for (Extension extension : serverObject.getExtensionsList())
          server.addExtension(extension.getKey(), extension.getValue());
      }

      return server;
    }

    public static io.swagger.v3.oas.models.servers.ServerVariable ServerVariableObject.reverseServerVariable(ServerVariableObject serverVariableObject){
      io.swagger.v3.oas.models.servers.ServerVariable serverVariable = new io.swagger.v3.oas.models.servers.ServerVariable();

      Optional.ofNullable(serverVariableObject.getDefault())
          .filter(value -> !value.isEmpty())
          .ifPresent(serverVariable::setDefault);
      Optional.ofNullable(serverVariableObject.getDescription())
          .filter(description -> !description.isEmpty())
          .ifPresent(serverVariable::setDescription);
      if (serverVariableObject.getNumEnums() != 0) {
        for (Enum enumItem : serverVariableObject.getEnumsList()) serverVariable.addEnumItem(enumItem.getEnumValue());
      }
      if (serverVariableObject.getNumExtensions() != 0) {
        for (Extension extension : serverVariableObject.getExtensionsList())
          serverVariable.addExtension(extension.getKey(), extension.getValue());
      }

      return serverVariable;
    }

    public static io.swagger.v3.oas.models.Components ComponentsObject.reverseComponents(ComponentsObject componentsObject){
      io.swagger.v3.oas.models.Components components = new io.swagger.v3.oas.models.Components();

      if (componentsObject.getNumSchemas() != 0) {
        for (SchemaTuple tuple : componentsObject.getSchemasList())
          components.addSchemas(tuple.getKey(), tuple.getSchema().reverseSchema(tuple.getSchema()));
      }
      if (componentsObject.getNumResponses() != 0) {
        for (ResponseTuple tuple : componentsObject.getResponsesList())
          components.addResponses(tuple.getKey(), tuple.getResponse().reverseResponse(tuple.getResponse()));
      }
      if (componentsObject.getNumParameters() != 0) {
        for (ParameterTuple tuple : componentsObject.getParametersList())
          components.addParameters(tuple.getKey(), tuple.getParameter().reverseParameter(tuple.getParameter()));
      }
      if (componentsObject.getNumExamples() != 0) {
        for (ExampleTuple tuple : componentsObject.getExamplesList())
          components.addExamples(tuple.getKey(), tuple.getExample().reverseExample(tuple.getExample()));
      }
      if (componentsObject.getNumRequestBodies() != 0) {
        for (RequestBodyTuple tuple : componentsObject.getRequestBodiesList())
          components.addRequestBodies(tuple.getKey(), tuple.getRequestBody().reverseRequestBody(tuple.getRequestBody()));
      }
      if (componentsObject.getNumHeaders() != 0) {
        for (HeaderTuple tuple : componentsObject.getHeadersList())
          components.addHeaders(tuple.getKey(), tuple.getHeader().reverseHeader(tuple.getHeader()));
      }
      if (componentsObject.getNumSecuritySchemes() != 0) {
        for (SecuritySchemeTuple tuple : componentsObject.getSecuritySchemesList())
          components.addSecuritySchemes(tuple.getKey(), tuple.getSecurityScheme().reverseSecurityScheme(tuple.getSecurityScheme()));
      }
      if (componentsObject.getNumLinks() != 0) {
        for (LinkTuple tuple : componentsObject.getLinksList())
          components.addLinks(tuple.getKey(), tuple.getLink().reverseLink(tuple.getLink()));
      }
      if (componentsObject.getNumCallbacks() != 0) {
        for (CallbackTuple tuple : componentsObject.getCallbacksList())
          components.addCallbacks(tuple.getKey(), tuple.getCallback().reverseCallback(tuple.getCallback()));
      }
      if (componentsObject.getNumExtensions() != 0) {
        for (Extension extension : componentsObject.getExtensionsList())
          components.addExtension(extension.getKey(), extension.getValue());
      }

      return components;
    }

    syn io.swagger.v3.oas.models.PathItem PathItemType.reversePath(PathItemType pathItemType);
    eq PathItemReference.reversePath(PathItemType pathItemType){
      io.swagger.v3.oas.models.PathItem pathItem = new io.swagger.v3.oas.models.PathItem();
      PathItemReference pathItemReference = (PathItemReference) pathItemType;

      Optional.ofNullable(pathItemReference.getRef())
          .filter(ref -> !ref.isEmpty())
          .ifPresent(pathItem::set$ref);

      return pathItem;
    }
    eq PathItemObject.reversePath(PathItemType pathItemType){
      io.swagger.v3.oas.models.PathItem pathItem = new io.swagger.v3.oas.models.PathItem();
      PathItemObject pathItemObject = (PathItemObject) pathItemType;

      Optional.ofNullable(pathItemObject.getSummary())
          .filter(summary -> !summary.isEmpty())
          .ifPresent(pathItem::setSummary);
      Optional.ofNullable(pathItemObject.getDescription())
          .filter(description -> !description.isEmpty())
          .ifPresent(pathItem::setDescription);
      Optional.ofNullable(pathItemObject.getGetOperation())
          .ifPresent(operation -> pathItem.setGet(OperationObject.reverseOperation(operation)));
      Optional.ofNullable(pathItemObject.getPutOperation())
          .ifPresent(operation -> pathItem.setPut(OperationObject.reverseOperation(operation)));
      Optional.ofNullable(pathItemObject.getPostOperation())
          .ifPresent(operation -> pathItem.setPost(OperationObject.reverseOperation(operation)));
      Optional.ofNullable(pathItemObject.getDeleteOperation())
          .ifPresent(operation -> pathItem.setDelete(OperationObject.reverseOperation(operation)));
      Optional.ofNullable(pathItemObject.getOptionsOperation())
          .ifPresent(operation -> pathItem.setOptions(OperationObject.reverseOperation(operation)));
      Optional.ofNullable(pathItemObject.getHeadOperation())
          .ifPresent(operation -> pathItem.setHead(OperationObject.reverseOperation(operation)));
      Optional.ofNullable(pathItemObject.getPatchOperation())
          .ifPresent(operation -> pathItem.setPatch(OperationObject.reverseOperation(operation)));
      Optional.ofNullable(pathItemObject.getTraceOperation())
          .ifPresent(operation -> pathItem.setTrace(OperationObject.reverseOperation(operation)));

      if (pathItemObject.getNumServers() != 0) {
        for (ServerObject server : pathItemObject.getServersList())
          pathItem.addServersItem(ServerObject.reverseServer(server));
      }
      if (pathItemObject.getNumParameters() != 0) {
        for (ParameterType parameter : pathItemObject.getParametersList())
          pathItem.addParametersItem(parameter.reverseParameter(parameter));
      }
      if (pathItemObject.getNumExtensions() != 0) {
        for (Extension extension : pathItemObject.getExtensionsList())
          pathItem.addExtension(extension.getKey(), extension.getValue());
      }

      return pathItem;
    }

    public static io.swagger.v3.oas.models.Operation OperationObject.reverseOperation(OperationObject operationObject){
      io.swagger.v3.oas.models.Operation operation = new io.swagger.v3.oas.models.Operation();

      Optional.ofNullable(operationObject.getSummary())
          .filter(summary -> !summary.isEmpty())
          .ifPresent(operation::setSummary);
      Optional.ofNullable(operationObject.getDescription())
          .filter(description -> !description.isEmpty())
          .ifPresent(operation::setDescription);
      Optional.ofNullable(operationObject.getOperationID())
          .filter(id -> !id.isEmpty())
          .ifPresent(operation::setOperationId);
      Optional.ofNullable(operationObject.getDeprecated())
          .ifPresent(operation::setDeprecated);
      Optional.ofNullable(operationObject.getExternalDocs())
          .ifPresent(externalDocs -> operation.setExternalDocs(ExternalDocObject.reverseExternalDocs(externalDocs)));
      Optional.ofNullable(operationObject.getRequestBody())
          .ifPresent(requestBody -> operation.setRequestBody(requestBody.reverseRequestBody(requestBody)));

      if (operationObject.getNumTags() != 0) {
        for (Tag tag : operationObject.getTagsList()) operation.addTagsItem(tag.getTag());
      }
      if (operationObject.getNumParameters() != 0) {
        for (ParameterType parameterType : operationObject.getParametersList())
          operation.addParametersItem(parameterType.reverseParameter(parameterType));
      }
      if (operationObject.getResponses().getNumResponses() != 0) {
        io.swagger.v3.oas.models.responses.ApiResponses responses = new io.swagger.v3.oas.models.responses.ApiResponses();
        for (ResponseTuple tuple : operationObject.getResponses().getResponsesList())
          responses.put(tuple.getKey(), tuple.getResponse().reverseResponse(tuple.getResponse()));
        operation.setResponses(responses);
      }
      if (operationObject.getNumCallbacks() != 0) {
        Map<String, io.swagger.v3.oas.models.callbacks.Callback> callbacks = new HashMap<>();
        for (CallbackTuple tuple : operationObject.getCallbacksList())
          callbacks.put(tuple.getKey(), tuple.getCallback().reverseCallback(tuple.getCallback()));
        operation.setCallbacks(callbacks);
      }
      if (operationObject.getNumSecurityRequirements() != 0) {
        for (SecurityRequirementObject securityRequirement : operationObject.getSecurityRequirementsList())
          operation.addSecurityItem(SecurityRequirementObject.reverseSecurityRequirement(securityRequirement));
      }
      if (operationObject.getNumServers() != 0) {
        for (ServerObject serverObject : operationObject.getServersList())
          operation.addServersItem(ServerObject.reverseServer(serverObject));
      }
      if (operationObject.getNumExtensions() != 0) {
        for (Extension extension : operationObject.getExtensionsList())
          operation.addExtension(extension.getKey(), extension.getValue());
      }

      return operation;
    }

    public static io.swagger.v3.oas.models.ExternalDocumentation ExternalDocObject.reverseExternalDocs(ExternalDocObject externalDocObject){
      io.swagger.v3.oas.models.ExternalDocumentation externalDocs = new io.swagger.v3.oas.models.ExternalDocumentation();

      Optional.ofNullable(externalDocObject.getDescription())
          .filter(description -> !description.isEmpty())
          .ifPresent(externalDocs::setDescription);
      Optional.ofNullable(externalDocObject.getUrl())
          .filter(url -> !url.isEmpty())
          .ifPresent(externalDocs::setUrl);

      if (externalDocObject.getNumExtensions() != 0) {
        for (Extension extension : externalDocObject.getExtensionsList())
          externalDocs.addExtension(extension.getKey(), extension.getValue());
      }

      return externalDocs;
    }

    syn io.swagger.v3.oas.models.parameters.Parameter ParameterType.reverseParameter(ParameterType parameterType);
    eq ParameterReference.reverseParameter(ParameterType parameterType){
      io.swagger.v3.oas.models.parameters.Parameter parameter = new io.swagger.v3.oas.models.parameters.Parameter();
      ParameterReference parameterReference = (ParameterReference) parameterType;

      Optional.ofNullable(parameterReference.getRef())
          .filter(ref -> !ref.isEmpty())
          .ifPresent(parameter::set$ref);

      return parameter;
    }
    eq ParameterObject.reverseParameter(ParameterType parameterType){
      io.swagger.v3.oas.models.parameters.Parameter parameter = new io.swagger.v3.oas.models.parameters.Parameter();
      ParameterObject parameterObject = (ParameterObject) parameterType;

      Optional.ofNullable(parameterObject.getName())
          .filter(name -> !name.isEmpty())
          .ifPresent(parameter::setName);
      Optional.ofNullable(parameterObject.getIn())
          .filter(in -> !in.isEmpty())
          .ifPresent(parameter::setIn);
      Optional.ofNullable(parameterObject.getDescription())
          .filter(description -> !description.isEmpty())
          .ifPresent(parameter::setDescription);

      Optional.ofNullable(parameterObject.getRequired())
          .ifPresent(parameter::setRequired);
      Optional.ofNullable(parameterObject.getDeprecated())
          .ifPresent(parameter::setDeprecated);
      Optional.ofNullable(parameterObject.getAllowReserved())
          .ifPresent(parameter::setAllowReserved);
      Optional.ofNullable(parameterObject.getAllowEmptyValue())
          .ifPresent(parameter::setAllowEmptyValue);
      Optional.ofNullable(parameterObject.getExplode())
          .ifPresent(parameter::setExplode);
      Optional.ofNullable(parameterObject.getExample())
          .ifPresent(parameter::setExample);
      Optional.ofNullable(parameterObject.getSchema())
          .ifPresent(schema -> parameter.setSchema(schema.reverseSchema(schema)));

      switch (parameterObject.getStyle()) {
        case "matrix":
          parameter.setStyle(io.swagger.v3.oas.models.parameters.Parameter.StyleEnum.MATRIX);
          break;
        case "label":
          parameter.setStyle(io.swagger.v3.oas.models.parameters.Parameter.StyleEnum.LABEL);
          break;
        case "form":
          parameter.setStyle(io.swagger.v3.oas.models.parameters.Parameter.StyleEnum.FORM);
          break;
        case "simple":
          parameter.setStyle(io.swagger.v3.oas.models.parameters.Parameter.StyleEnum.SIMPLE);
          break;
        case "spaceDelimited":
          parameter.setStyle(io.swagger.v3.oas.models.parameters.Parameter.StyleEnum.SPACEDELIMITED);
          break;
        case "pipeDelimited":
          parameter.setStyle(io.swagger.v3.oas.models.parameters.Parameter.StyleEnum.PIPEDELIMITED);
          break;
        case "deepObject":
          parameter.setStyle(io.swagger.v3.oas.models.parameters.Parameter.StyleEnum.DEEPOBJECT);
          break;
      }

      if (parameterObject.getNumExamples() != 0) {
        for (ExampleTuple tuple : parameterObject.getExamplesList())
          parameter.addExample(tuple.getKey(), tuple.getExample().reverseExample(tuple.getExample()));
      }
      if (parameterObject.getNumContent() != 0) {
        io.swagger.v3.oas.models.media.Content content = new io.swagger.v3.oas.models.media.Content();
        for (ContentTuple tuple : parameterObject.getContentList())
          content.put(tuple.getKey(), MediaTypeObject.reverseMediaType(tuple.getMediaType()));
        parameter.setContent(content);
      }
      if (parameterObject.getNumContent() != 0) {
        for (Extension extension : parameterObject.getExtensionsList())
          parameter.addExtension(extension.getKey(), extension.getValue());
      }

      return parameter;
    }

    syn io.swagger.v3.oas.models.parameters.RequestBody RequestBodyType.reverseRequestBody(RequestBodyType requestBodyType);
    eq RequestBodyReference.reverseRequestBody(RequestBodyType requestBodyType){
      io.swagger.v3.oas.models.parameters.RequestBody requestBody = new io.swagger.v3.oas.models.parameters.RequestBody();
      RequestBodyReference requestBodyReference = (RequestBodyReference) requestBodyType;

      Optional.ofNullable(requestBodyReference.getRef())
          .filter(ref -> !ref.isEmpty())
          .ifPresent(requestBody::set$ref);

      return requestBody;
    }
    eq RequestBodyObject.reverseRequestBody(RequestBodyType requestBodyType){
      io.swagger.v3.oas.models.parameters.RequestBody requestBody = new io.swagger.v3.oas.models.parameters.RequestBody();
      RequestBodyObject requestBodyObject = (RequestBodyObject) requestBodyType;
      io.swagger.v3.oas.models.media.Content contents = new io.swagger.v3.oas.models.media.Content();

      for (ContentTuple tuple : requestBodyObject.getContentList())
        contents.addMediaType(tuple.getKey(), MediaTypeObject.reverseMediaType(tuple.getMediaType()));
      requestBody.setContent(contents);
      Optional.ofNullable(requestBodyObject.getDescription())
          .filter(description -> !description.isEmpty())
          .ifPresent(requestBody::setDescription);
      Optional.ofNullable(requestBodyObject.getRequired())
          .ifPresent(requestBody::setRequired);
      if (requestBodyObject.getNumExtensions() != 0) {
        for (Extension extension : requestBodyObject.getExtensionsList())
          requestBody.addExtension(extension.getKey(), extension.getValue());
      }

      return requestBody;
    }

    public static io.swagger.v3.oas.models.media.MediaType MediaTypeObject.reverseMediaType(MediaTypeObject mediaTypeObject){
      io.swagger.v3.oas.models.media.MediaType mediaType = new io.swagger.v3.oas.models.media.MediaType();

      Optional.ofNullable(mediaTypeObject.getSchema())
          .ifPresent(schema -> mediaType.setSchema(schema.reverseSchema(schema)));
      Optional.ofNullable(mediaTypeObject.getExample())
          .ifPresent(mediaType::setExample);
      if (mediaTypeObject.getNumExamples() != 0) {
        for (ExampleTuple tuple : mediaTypeObject.getExamplesList())
          mediaType.addExamples(tuple.getKey(), tuple.getExample().reverseExample(tuple.getExample()));
      }
      if (mediaTypeObject.getNumEncodings() != 0) {
        for (EncodingTuple tuple : mediaTypeObject.getEncodingsList())
          mediaType.addEncoding(tuple.getKey(), tuple.getEncoding().reverseEncoding(tuple.getEncoding()));
      }
      if (mediaTypeObject.getNumExtensions() != 0) {
        for (Extension extension : mediaTypeObject.getExtensionsList())
          mediaType.addExtension(extension.getKey(), extension.getValue());
      }

      return mediaType;
    }

    public static io.swagger.v3.oas.models.media.Encoding EncodingObject.reverseEncoding(EncodingObject encodingObject){
      io.swagger.v3.oas.models.media.Encoding encodingProperty = new io.swagger.v3.oas.models.media.Encoding();

      Optional.ofNullable(encodingObject.getContentType())
          .filter(contentType -> !contentType.isEmpty())
          .ifPresent(encodingProperty::setContentType);
      Optional.ofNullable(encodingObject.getExplode())
          .ifPresent(encodingProperty::setExplode);

      switch (encodingObject.getStyle()) {
        case ("form"):
          encodingProperty.setStyle(io.swagger.v3.oas.models.media.Encoding.StyleEnum.FORM);
          break;
        case ("spaceDelimited"):
          encodingProperty.setStyle(io.swagger.v3.oas.models.media.Encoding.StyleEnum.SPACE_DELIMITED);
          break;
        case ("pipeDelimited"):
          encodingProperty.setStyle(io.swagger.v3.oas.models.media.Encoding.StyleEnum.PIPE_DELIMITED);
          break;
        case ("deepObject"):
          encodingProperty.setStyle(io.swagger.v3.oas.models.media.Encoding.StyleEnum.DEEP_OBJECT);
          break;
      }

      if (encodingObject.getNumHeaders() != 0) {
        Map<String, io.swagger.v3.oas.models.headers.Header> headers = new HashMap<>();
        for (HeaderTuple tuple : encodingObject.getHeadersList())
          headers.put(tuple.getKey(), tuple.getHeader().reverseHeader(tuple.getHeader()));
        encodingProperty.setHeaders(headers);
      }
      if (encodingObject.getNumExtensions() != 0) {
        for (Extension extension : encodingObject.getExtensionsList())
          encodingProperty.addExtension(extension.getKey(), extension.getValue());
      }

      return encodingProperty;
    }

    syn io.swagger.v3.oas.models.responses.ApiResponse ResponseType.reverseResponse(ResponseType responseType);
    eq ResponseReference.reverseResponse(ResponseType responseType){
      io.swagger.v3.oas.models.responses.ApiResponse response = new io.swagger.v3.oas.models.responses.ApiResponse();
      ResponseReference responseReference = (ResponseReference) responseType;

      Optional.ofNullable(responseReference.getRef())
          .filter(ref -> !ref.isEmpty())
          .ifPresent(response::set$ref);

      return response;
    }
    eq ResponseObject.reverseResponse(ResponseType responseType){
      io.swagger.v3.oas.models.responses.ApiResponse response = new io.swagger.v3.oas.models.responses.ApiResponse();
      ResponseObject responseObject = (ResponseObject) responseType;

      Optional.ofNullable(responseObject.getDescription())
          .filter(description -> !description.isEmpty())
          .ifPresent(response::setDescription);

      if (responseObject.getNumHeaders() != 0) {
        for (HeaderTuple tuple : responseObject.getHeadersList())
          response.addHeaderObject(tuple.getKey(), tuple.getHeader().reverseHeader(tuple.getHeader()));
      }
      if (responseObject.getNumContents() != 0) {
        io.swagger.v3.oas.models.media.Content content = new io.swagger.v3.oas.models.media.Content();
        for (ContentTuple tuple : responseObject.getContentsList())
          content.addMediaType(tuple.getKey(), MediaTypeObject.reverseMediaType(tuple.getMediaType()));
        response.setContent(content);
      }
      if (responseObject.getNumLinks() != 0) {
        Map<String, io.swagger.v3.oas.models.links.Link> links = new HashMap<>();
        for (LinkTuple tuple : responseObject.getLinksList())
          links.put(tuple.getKey(), tuple.getLink().reverseLink(tuple.getLink()));
        response.setLinks(links);
      }
      if (responseObject.getNumExtensions() != 0) {
        for (Extension extension : responseObject.getExtensionsList())
          response.addExtension(extension.getKey(), extension.getValue());
      }

      return response;
    }

    syn io.swagger.v3.oas.models.callbacks.Callback CallbackType.reverseCallback(CallbackType callbackType);
    eq CallbackReference.reverseCallback(CallbackType callbackType){
      io.swagger.v3.oas.models.callbacks.Callback callback = new io.swagger.v3.oas.models.callbacks.Callback();
      CallbackReference callbackReference = (CallbackReference) callbackType;

      Optional.ofNullable(callbackReference.getRef())
          .filter(ref -> !ref.isEmpty())
          .ifPresent(callback::set$ref);

      return callback;
    }
    eq CallbackObject.reverseCallback(CallbackType callbackType){
      io.swagger.v3.oas.models.callbacks.Callback callback = new io.swagger.v3.oas.models.callbacks.Callback();
      CallbackObject callbackObject = (CallbackObject) callbackType;

      if (callbackObject.getNumExpressions() != 0) {
        for (Expression expression : callbackObject.getExpressionsList())
          callback.addPathItem(expression.getName(), expression.getPathItem().reversePath(expression.getPathItem()));
      }
      if (callbackObject.getNumExtensions() != 0) {
        for (Extension extension : callbackObject.getExtensionsList())
          callback.addExtension(extension.getKey(), extension.getValue());
      }

      return callback;
    }

    syn io.swagger.v3.oas.models.examples.Example ExampleType.reverseExample(ExampleType exampleType);
    eq ExampleReference.reverseExample(ExampleType exampleType){
      io.swagger.v3.oas.models.examples.Example example = new io.swagger.v3.oas.models.examples.Example();
      ExampleReference exampleReference = (ExampleReference) exampleType;

      Optional.ofNullable(exampleReference.getRef())
          .filter(ref -> !ref.isEmpty())
          .ifPresent(example::set$ref);

      return example;
    }
    eq ExampleObject.reverseExample(ExampleType exampleType){
      io.swagger.v3.oas.models.examples.Example example = new io.swagger.v3.oas.models.examples.Example();
      ExampleObject exampleObject = (ExampleObject) exampleType;

      Optional.ofNullable(exampleObject.getSummary())
          .filter(summmary -> !summmary.isEmpty())
          .ifPresent(example::setSummary);
      Optional.ofNullable(exampleObject.getDescription())
          .filter(description -> !description.isEmpty())
          .ifPresent(example::setDescription);
      Optional.ofNullable(exampleObject.getExternalValue())
          .filter(externalValue -> !externalValue.isEmpty())
          .ifPresent(example::setExternalValue);
      Optional.ofNullable(exampleObject.getValue())
          .ifPresent(example::setValue);

      if (exampleObject.getNumExtensions() != 0) {
        for (Extension extension : exampleObject.getExtensionsList())
          example.addExtension(extension.getKey(), extension.getValue());
      }

      return example;
    }

    syn io.swagger.v3.oas.models.links.Link LinkType.reverseLink(LinkType linkType);
    eq LinkReference.reverseLink(LinkType linkType){
      io.swagger.v3.oas.models.links.Link link = new io.swagger.v3.oas.models.links.Link();
      LinkReference linkReference = (LinkReference) linkType;

      Optional.ofNullable(linkReference.getRef())
          .filter(ref -> !ref.isEmpty())
          .ifPresent(link::set$ref);

      return link;
    }
    eq LinkObject.reverseLink(LinkType linkType){
      io.swagger.v3.oas.models.links.Link link = new io.swagger.v3.oas.models.links.Link();
      LinkObject linkObject = (LinkObject) linkType;

      Optional.ofNullable(linkObject.getOperationRef())
          .filter(ref -> !ref.isEmpty())
          .ifPresent(link::setOperationRef);
      Optional.ofNullable(linkObject.getOperationID())
          .filter(id -> !id.isEmpty())
          .ifPresent(link::setOperationId);
      Optional.ofNullable(linkObject.getDescription())
          .filter(description -> !description.isEmpty())
          .ifPresent(link::setDescription);
      Optional.ofNullable(linkObject.getServer())
          .ifPresent(server -> link.setServer(ServerObject.reverseServer(server)));

      if (linkObject.getNumLinkParameter() != 0) {
        Map<String, String> parameters = new HashMap<>();
        for (LinkParameterTuple tuple : linkObject.getLinkParameters())
          parameters.put(tuple.getKey(), tuple.getValue());
        link.setParameters(parameters);
      }
      if (linkObject.getNumExtensions() != 0) {
        for (Extension extension : linkObject.getExtensionsList())
          link.addExtension(extension.getKey(), extension.getValue());
      }

      return link;
    }

    syn io.swagger.v3.oas.models.headers.Header HeaderType.reverseHeader(HeaderType headerType);
    eq HeaderReference.reverseHeader(HeaderType headerType){
      io.swagger.v3.oas.models.headers.Header header = new io.swagger.v3.oas.models.headers.Header();
      HeaderReference headerReference = (HeaderReference) headerType;

      Optional.ofNullable(headerReference.getRef())
          .filter(ref -> !ref.isEmpty())
          .ifPresent(header::set$ref);

      return header;
    }
    eq HeaderObject.reverseHeader(HeaderType headerType){
      io.swagger.v3.oas.models.headers.Header header = new io.swagger.v3.oas.models.headers.Header();
      HeaderObject headerObject = (HeaderObject) headerType;

      Optional.ofNullable(headerObject.getRequired()).ifPresent(header::setRequired);
      Optional.ofNullable(headerObject.getExplode()).ifPresent(header::setExplode);
      Optional.ofNullable(headerObject.getExample()).ifPresent(header::setExample);
      Optional.ofNullable(headerObject.getSchema())
          .ifPresent(schema -> header.setSchema(headerObject.getSchema().reverseSchema(headerObject.getSchema())));
      Optional.ofNullable(headerObject.getDescription())
          .filter(description -> !description.isEmpty())
          .ifPresent(header::setDescription);

      if (headerObject.getNumExamples() != 0) {
        Map<String, io.swagger.v3.oas.models.examples.Example> examples = new HashMap<>();
        for (ExampleTuple tuple : headerObject.getExamplesList())
          examples.put(tuple.getKey(), tuple.getExample().reverseExample(tuple.getExample()));
        header.setExample(examples);
      }
      if (headerObject.getNumContents() != 0) {
        io.swagger.v3.oas.models.media.Content contents = new io.swagger.v3.oas.models.media.Content();
        for (ContentTuple tuple : headerObject.getContentsList())
          contents.put(tuple.getKey(), MediaTypeObject.reverseMediaType(tuple.getMediaType()));
        header.setContent(contents);
      }
      if (headerObject.getNumExtensions() != 0) {
        Map<String, Object> extensions = new HashMap<>();
        for (Extension extension : headerObject.getExtensionsList())
          extensions.put(extension.getKey(), extension.getValue());
        header.setExtensions(extensions);
      }

      switch (headerObject.getStyle()) {
        case "simple":
          header.setStyle(io.swagger.v3.oas.models.headers.Header.StyleEnum.SIMPLE);
          break;
      }

      return header;
    }


    public static io.swagger.v3.oas.models.tags.Tag TagObject.reverseTag(TagObject tagObject){
      io.swagger.v3.oas.models.tags.Tag tag = new io.swagger.v3.oas.models.tags.Tag();

      tag.setName(tagObject.getName());
      Optional.ofNullable(tagObject.getDescription())
          .filter(name -> !name.isEmpty())
          .ifPresent(tag::setDescription);
      Optional.ofNullable(tagObject.getExternalDoc())
          .ifPresent(externalDocs -> tag.setExternalDocs(ExternalDocObject.reverseExternalDocs(externalDocs)));

      if (tagObject.getNumExtensions() != 0) {
        Map<String, Object> extensionMap = new HashMap<>();
        for (Extension extension : tagObject.getExtensionsList())
          extensionMap.put(extension.getKey(), extension.getValue());
        tag.setExtensions(extensionMap);
      }

      return tag;
    }

    syn io.swagger.v3.oas.models.media.Schema SchemaType.reverseSchema(SchemaType schemaType);
    eq SchemaReference.reverseSchema(SchemaType schemaType){
      io.swagger.v3.oas.models.media.Schema schema = new io.swagger.v3.oas.models.media.Schema();
      SchemaReference schemaReference = (SchemaReference) schemaType;

      Optional.ofNullable(schemaReference.getRef())
          .filter(ref -> !ref.isEmpty())
          .ifPresent(schema::set$ref);

      return schema;
    }
    eq SchemaObject.reverseSchema(SchemaType schemaType){
      io.swagger.v3.oas.models.media.Schema<Object> schema = new io.swagger.v3.oas.models.media.Schema<>();
      io.swagger.v3.oas.models.media.Schema<Object> finalSchema = schema;
      SchemaObject schemaObject = (SchemaObject) schemaType;

      Optional.ofNullable(schemaObject.getItemsSchema())
          .ifPresent(itemsSchema -> ((io.swagger.v3.oas.models.media.ArraySchema) finalSchema).setItems(schemaType.reverseSchema(itemsSchema.getSchema())));

      Optional.ofNullable(schemaObject.getAdditionalProperties()).ifPresent(schema::setAdditionalProperties);
      Optional.ofNullable(schemaObject.getDefaultValue()).ifPresent(schema::setDefault);
      Optional.ofNullable(schemaObject.getDescription()).filter(description -> !description.isEmpty()).ifPresent(schema::setDescription);
      Optional.ofNullable(schemaObject.getDeprecatedBoolean()).ifPresent(schema::setDeprecated);
      Optional.ofNullable(schemaObject.getDiscriminator()).ifPresent(discriminator -> finalSchema.setDiscriminator(DiscriminatorObject.reverseDiscriminator(discriminator)));
      Optional.ofNullable(schemaObject.getExampleElements(0)).ifPresent(exampleElement -> finalSchema.setExample(exampleElement.getExample()));
      Optional.ofNullable(schemaObject.getExclusiveMaximum()).ifPresent(schema::setExclusiveMaximum);
      Optional.ofNullable(schemaObject.getExclusiveMinimum()).ifPresent(schema::setExclusiveMinimum);
      Optional.ofNullable(schemaObject.getExternalDoc()).ifPresent(externalDoc -> finalSchema.setExternalDocs(ExternalDocObject.reverseExternalDocs(externalDoc)));
      Optional.ofNullable(schemaObject.getFormat()).filter(format -> !format.isEmpty()).ifPresent(schema::setFormat);

      if (schemaObject.getNumAllOfSchema() != 0 || schemaObject.getNumAnyOfSchema() != 0 || schemaObject.getNumOneOfSchema() != 0) {
        schema = new io.swagger.v3.oas.models.media.ComposedSchema();
        Optional.ofNullable(schemaObject.getAllOfSchemaList()).ifPresent(allList -> allList.forEach(all -> ((io.swagger.v3.oas.models.media.ComposedSchema) finalSchema).addAllOfItem(all.getSchema().reverseSchema(all.getSchema()))));
        Optional.ofNullable(schemaObject.getAnyOfSchemaList()).ifPresent(anyList -> anyList.forEach(any -> ((io.swagger.v3.oas.models.media.ComposedSchema) finalSchema).addAnyOfItem(any.getSchema().reverseSchema(any.getSchema()))));
        Optional.ofNullable(schemaObject.getOneOfSchemaList()).ifPresent(oneList -> oneList.forEach(one -> ((io.swagger.v3.oas.models.media.ComposedSchema) finalSchema).addOneOfItem(one.getSchema().reverseSchema(one.getSchema()))));
      }

      Optional.ofNullable(schemaObject.getEnumList()).ifPresent(enums -> enums.forEach(e -> finalSchema.addEnumItemObject(e.getEnum())));
      Optional.ofNullable(schemaObject.getPropertyItemsList()).ifPresent(propertyItems -> {
        Map<String, io.swagger.v3.oas.models.media.Schema> properties = new HashMap<>();
        propertyItems.forEach(item -> properties.put(item.getName(), item.getSchema().reverseSchema(item.getSchema())));
        finalSchema.setProperties(properties);
      });
      Optional.ofNullable(schemaObject.getRequiredFieldsList()).ifPresent(fields -> fields.forEach(r -> finalSchema.addRequiredItem(r.getValue())));

      return schema;
    }

    public static io.swagger.v3.oas.models.media.Discriminator DiscriminatorObject.reverseDiscriminator(DiscriminatorObject discriminatorObject){
      io.swagger.v3.oas.models.media.Discriminator discriminator = new io.swagger.v3.oas.models.media.Discriminator();

      Optional.ofNullable(discriminatorObject.getPropertyName())
          .filter(propertyName -> !propertyName.isEmpty())
          .ifPresent(discriminator::setPropertyName);

      if (discriminatorObject.getNumMappings() != 0) {
        Map<String, String> mapping = new HashMap<>();
        for (MappingTuple tuple : discriminatorObject.getMappingsList()) mapping.put(tuple.getKey(), tuple.getValue());
        discriminator.setMapping(mapping);
      }

      return discriminator;
    }

    public static io.swagger.v3.oas.models.media.XML XmlObject.reverseXml(XmlObject xmlObject){
      io.swagger.v3.oas.models.media.XML xml = new io.swagger.v3.oas.models.media.XML();

      Optional.ofNullable(xmlObject.getName())
          .filter(name -> !name.isEmpty())
          .ifPresent(xml::setName);
      Optional.ofNullable(xmlObject.getNamespace())
          .filter(namespace -> !namespace.isEmpty())
          .ifPresent(xml::setNamespace);
      Optional.ofNullable(xmlObject.getPrefix())
          .filter(prefix -> !prefix.isEmpty())
          .ifPresent(xml::setPrefix);
      Optional.ofNullable(xmlObject.getAttribute())
          .ifPresent(xml::setAttribute);
      Optional.ofNullable(xmlObject.getWrapped())
          .ifPresent(xml::setWrapped);
      Optional.ofNullable(xmlObject.getExtensionsList())
          .ifPresent(extensions -> extensions.forEach(extension ->
              xml.addExtension(extension.getKey(), extension.getValue())));

      return xml;
    }

    syn io.swagger.v3.oas.models.security.SecurityScheme SecuritySchemeType.reverseSecurityScheme(SecuritySchemeType securitySchemeType);
    eq SecuritySchemeReference.reverseSecurityScheme(SecuritySchemeType securitySchemeType){
      io.swagger.v3.oas.models.security.SecurityScheme securityScheme = new io.swagger.v3.oas.models.security.SecurityScheme();
      SecuritySchemeReference securitySchemeReference = (SecuritySchemeReference) securitySchemeType;

      Optional.ofNullable(securitySchemeReference.getRef())
          .filter(ref -> !ref.isEmpty())
          .ifPresent(securityScheme::set$ref);

      return securityScheme;
    }
    eq SecuritySchemeObject.reverseSecurityScheme(SecuritySchemeType securitySchemeType){
      io.swagger.v3.oas.models.security.SecurityScheme securityScheme = new io.swagger.v3.oas.models.security.SecurityScheme();
      SecuritySchemeObject securitySchemeObject = (SecuritySchemeObject) securitySchemeType;

      Map<String, io.swagger.v3.oas.models.security.SecurityScheme.Type> typeMap = Map.of(
          "apiKey", io.swagger.v3.oas.models.security.SecurityScheme.Type.APIKEY,
          "http", io.swagger.v3.oas.models.security.SecurityScheme.Type.HTTP,
          "oauth2", io.swagger.v3.oas.models.security.SecurityScheme.Type.OAUTH2,
          "openIdConnect", io.swagger.v3.oas.models.security.SecurityScheme.Type.OPENIDCONNECT);

      Map<String, io.swagger.v3.oas.models.security.SecurityScheme.In> inMap = Map.of(
          "cookie", io.swagger.v3.oas.models.security.SecurityScheme.In.COOKIE,
          "header", io.swagger.v3.oas.models.security.SecurityScheme.In.HEADER,
          "query", io.swagger.v3.oas.models.security.SecurityScheme.In.QUERY);

      Optional.ofNullable(typeMap.get(securitySchemeObject.getType()))
          .ifPresent(securityScheme::setType);

      Optional.ofNullable(securitySchemeObject.getName())
          .filter(name -> !name.isEmpty())
          .ifPresent(securityScheme::setName);

      Optional.ofNullable(inMap.get(securitySchemeObject.getIn()))
          .ifPresent(securityScheme::setIn);

      Optional.ofNullable(securitySchemeObject.getScheme())
          .filter(scheme -> !scheme.isEmpty())
          .ifPresent(securityScheme::setScheme);

      Optional.ofNullable(securitySchemeObject.getOpenIdConnectUrl())
          .filter(url -> !url.isEmpty())
          .ifPresent(securityScheme::setOpenIdConnectUrl);

      Optional.ofNullable(securitySchemeObject.getOAuthFlows())
          .ifPresent(oAuthFlowsObject -> securityScheme.setFlows(OAuthFlowsObject.reverseOAuthFlows(oAuthFlowsObject)));

      Optional.ofNullable(securitySchemeObject.getDescription())
          .filter(description -> !description.isEmpty())
          .ifPresent(securityScheme::setDescription);

      Optional.ofNullable(securitySchemeObject.getBearerFormat())
          .filter(format -> !format.isEmpty())
          .ifPresent(securityScheme::setBearerFormat);

      if (securitySchemeObject.getNumExtensions() != 0) {
        Map<String, Object> extensionMap = new HashMap<>();
        for (Extension extension : securitySchemeObject.getExtensionsList())
          extensionMap.put(extension.getKey(), extension.getValue());
        securityScheme.setExtensions(extensionMap);
      }

      return securityScheme;
    }



    public static io.swagger.v3.oas.models.security.OAuthFlows OAuthFlowsObject.reverseOAuthFlows(OAuthFlowsObject oAuthFlowsObject){
      io.swagger.v3.oas.models.security.OAuthFlows oAuthFlows = new io.swagger.v3.oas.models.security.OAuthFlows();

      Optional.ofNullable(oAuthFlowsObject.getImplicit()).ifPresent(implicit -> oAuthFlows.setImplicit(OAuthFlowObject.reverseOAuthFlow(implicit)));
      Optional.ofNullable(oAuthFlowsObject.getPassword()).ifPresent(password -> oAuthFlows.setPassword(OAuthFlowObject.reverseOAuthFlow(password)));
      Optional.ofNullable(oAuthFlowsObject.getClientCredentials()).ifPresent(clientCredentials -> oAuthFlows.setClientCredentials(OAuthFlowObject.reverseOAuthFlow(clientCredentials)));
      Optional.ofNullable(oAuthFlowsObject.getAuthorizationCode()).ifPresent(authorizationCode -> oAuthFlows.setAuthorizationCode(OAuthFlowObject.reverseOAuthFlow(authorizationCode)));

      return oAuthFlows;
    }

    public static io.swagger.v3.oas.models.security.OAuthFlow OAuthFlowObject.reverseOAuthFlow(OAuthFlowObject oAuthFlowObject){
      io.swagger.v3.oas.models.security.OAuthFlow oAuthFlow = new io.swagger.v3.oas.models.security.OAuthFlow();
      io.swagger.v3.oas.models.security.Scopes scopes = new io.swagger.v3.oas.models.security.Scopes();

      Optional.ofNullable(oAuthFlowObject.getAuthorizationUrl())
          .filter(url -> !url.isEmpty())
          .ifPresent(oAuthFlow::setAuthorizationUrl);
      Optional.ofNullable(oAuthFlowObject.getTokenUrl())
          .filter(url -> !url.isEmpty())
          .ifPresent(oAuthFlow::setTokenUrl);
      Optional.ofNullable(oAuthFlowObject.getRefreshUrl())
          .filter(url -> !url.isEmpty())
          .ifPresent(oAuthFlow::setRefreshUrl);
      oAuthFlowObject.getScopesList().forEach(tuple -> scopes.put(tuple.getScopesKey(), tuple.getScopesValue()));
      oAuthFlow.setScopes(scopes);

      return oAuthFlow;
    }

    public static io.swagger.v3.oas.models.security.SecurityRequirement SecurityRequirementObject.reverseSecurityRequirement(SecurityRequirementObject securityRequirementObject){
      io.swagger.v3.oas.models.security.SecurityRequirement securityRequirement = new io.swagger.v3.oas.models.security.SecurityRequirement();

      Optional.ofNullable(securityRequirementObject)
          .map(SecurityRequirementObject::getTupleList)
          .ifPresent(tuples -> tuples.forEach(tuple -> {
            List<String> values = new ArrayList<>();
            for (SecurityRequirementValue v : tuple.getValueList()) values.add(v.getValue());
            securityRequirement.addList(tuple.getName(), values);
          }));

      return securityRequirement;
    }
}
